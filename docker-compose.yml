# OpenStock Docker Compose Configuration
# This file defines the complete OpenStock application stack

services:
  openstock:
    build:
      context: .
      extra_hosts:
        - "mongodb:host-gateway"
    container_name: openstock-app
    ports:
      - "3100:3000"
    env_file:
      - .env
    environment:
      NODE_ENV: production
      # Override environment variables here if needed
      # USE_MOCK_TICKER: false  # Set to 'true' for testing without TradingView
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - openstock-network
    # Health check for the Next.js app
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongodb:
    image: mongo:7
    container_name: mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: openstock
    ports:
      - "27117:27017"
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    networks:
      - openstock-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: openstock-redis
    restart: unless-stopped
    ports:
      - "6479:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - openstock-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  openstock-network:
    driver: bridge

volumes:
  mongo-data:
    driver: local
  mongo-config:
    driver: local
  redis-data:
    driver: local
