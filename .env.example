# OpenStock 环境变量配置示例
# 复制此文件为 .env 并填写实际值

# ===== 核心配置 =====
NODE_ENV=production

# ===== 数据库配置 =====
# Docker 容器内部访问（应用容器连接 MongoDB 容器）
MONGODB_URI=mongodb://root:example@mongodb:27017/openstock?authSource=admin

# 主机外部访问（使用非默认端口 27117）
# MONGODB_URI=mongodb://root:example@localhost:27117/openstock?authSource=admin

# ===== Redis 缓存配置 =====
# Docker 容器内部访问
REDIS_URL=redis://redis:6379

# 主机外部访问（使用非默认端口 6479）
# REDIS_URL=redis://localhost:6479

# ===== 认证配置 =====
# 生成强密钥: openssl rand -base64 32
BETTER_AUTH_SECRET=your_random_secret_here_at_least_32_characters_long

# Docker 部署时使用非默认端口 3100
BETTER_AUTH_URL=http://localhost:3100

# ===== API 密钥 =====
# Finnhub API (备用数据源)
# 注册地址: https://finnhub.io
FINNHUB_API_KEY=your_finnhub_api_key_here
FINNHUB_BASE_URL=https://finnhub.io/api/v1

# ===== AI 功能 (可选) =====
# Google Gemini API (用于 Inngest 工作流)
# 注册地址: https://ai.google.dev
GEMINI_API_KEY=your_gemini_api_key_here

# ===== 邮件服务 (可选) =====
# Gmail SMTP 配置
NODEMAILER_EMAIL=your_email@gmail.com
NODEMAILER_PASSWORD=your_gmail_app_password

# ===== 开发配置 =====
# 使用模拟 TradingView 数据（测试用）
# USE_MOCK_TICKER=false

# ===== 端口说明 =====
# 非默认端口配置（Docker）:
# - 应用访问: http://localhost:3100
# - MongoDB: localhost:27117
# - Redis: localhost:6479
#
# 为什么使用非默认端口？
# 1. 避免与本地开发环境冲突（如已运行的 MongoDB/Redis）
# 2. 降低自动端口扫描攻击的命中率
# 3. 提升生产环境安全性
